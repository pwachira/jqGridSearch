#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pharmacy.linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSS_PharmData")]
	public partial class CssPharmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void OnCreated()
    {
        base.ObjectTrackingEnabled = false;
        base.CommandTimeout = 180;
        //throw new NotImplementedException();
    }
    partial void InsertCSS_PharmacyClassCombo(CSS_PharmacyClassCombo instance);
    partial void UpdateCSS_PharmacyClassCombo(CSS_PharmacyClassCombo instance);
    partial void DeleteCSS_PharmacyClassCombo(CSS_PharmacyClassCombo instance);
    partial void InsertCSS_PharmacyClass(CSS_PharmacyClass instance);
    partial void UpdateCSS_PharmacyClass(CSS_PharmacyClass instance);
    partial void DeleteCSS_PharmacyClass(CSS_PharmacyClass instance);
    partial void InsertCSS_TreatmentProfile(CSS_TreatmentProfile instance);
    partial void UpdateCSS_TreatmentProfile(CSS_TreatmentProfile instance);
    partial void DeleteCSS_TreatmentProfile(CSS_TreatmentProfile instance);
    partial void InsertCSS_PharmacyDrug(CSS_PharmacyDrug instance);
    partial void UpdateCSS_PharmacyDrug(CSS_PharmacyDrug instance);
    partial void DeleteCSS_PharmacyDrug(CSS_PharmacyDrug instance);
    #endregion
		
		public CssPharmDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CSS_PharmDataConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CssPharmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CssPharmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CssPharmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CssPharmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CSS_PharmacyClassCombo> CSS_PharmacyClassCombos
		{
			get
			{
				return this.GetTable<CSS_PharmacyClassCombo>();
			}
		}
		
		public System.Data.Linq.Table<CSS_PharmacyClass> CSS_PharmacyClasses
		{
			get
			{
				return this.GetTable<CSS_PharmacyClass>();
			}
		}
		
		public System.Data.Linq.Table<CSS_TreatmentProfile> CSS_TreatmentProfiles
		{
			get
			{
				return this.GetTable<CSS_TreatmentProfile>();
			}
		}
		
		public System.Data.Linq.Table<CSS_PharmacyDrug> CSS_PharmacyDrugs
		{
			get
			{
				return this.GetTable<CSS_PharmacyDrug>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CSS_GetTreatmentProfiles")]
		public ISingleResult<CSS_GetTreatmentProfilesResult> CSS_GetTreatmentProfiles()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CSS_GetTreatmentProfilesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CSS_PharmacyClassCombo")]
	public partial class CSS_PharmacyClassCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PharmacyClassComboId;
		
		private int _PharmacyDrugId;
		
		private int _PharmacyClassId;
		
		private string _MappedPartialDrug;
		
		private EntityRef<CSS_PharmacyClass> _CSS_PharmacyClass;
		
		private EntityRef<CSS_PharmacyDrug> _CSS_PharmacyDrug;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPharmacyClassComboIdChanging(int value);
    partial void OnPharmacyClassComboIdChanged();
    partial void OnPharmacyDrugIdChanging(int value);
    partial void OnPharmacyDrugIdChanged();
    partial void OnPharmacyClassIdChanging(int value);
    partial void OnPharmacyClassIdChanged();
    partial void OnMappedPartialDrugChanging(string value);
    partial void OnMappedPartialDrugChanged();
    #endregion
		
		public CSS_PharmacyClassCombo()
		{
			this._CSS_PharmacyClass = default(EntityRef<CSS_PharmacyClass>);
			this._CSS_PharmacyDrug = default(EntityRef<CSS_PharmacyDrug>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassComboId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PharmacyClassComboId
		{
			get
			{
				return this._PharmacyClassComboId;
			}
			set
			{
				if ((this._PharmacyClassComboId != value))
				{
					this.OnPharmacyClassComboIdChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassComboId = value;
					this.SendPropertyChanged("PharmacyClassComboId");
					this.OnPharmacyClassComboIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyDrugId", DbType="Int NOT NULL")]
		public int PharmacyDrugId
		{
			get
			{
				return this._PharmacyDrugId;
			}
			set
			{
				if ((this._PharmacyDrugId != value))
				{
					if (this._CSS_PharmacyDrug.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyDrugIdChanging(value);
					this.SendPropertyChanging();
					this._PharmacyDrugId = value;
					this.SendPropertyChanged("PharmacyDrugId");
					this.OnPharmacyDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassId", DbType="Int NOT NULL")]
		public int PharmacyClassId
		{
			get
			{
				return this._PharmacyClassId;
			}
			set
			{
				if ((this._PharmacyClassId != value))
				{
					if (this._CSS_PharmacyClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyClassIdChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassId = value;
					this.SendPropertyChanged("PharmacyClassId");
					this.OnPharmacyClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedPartialDrug", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MappedPartialDrug
		{
			get
			{
				return this._MappedPartialDrug;
			}
			set
			{
				if ((this._MappedPartialDrug != value))
				{
					this.OnMappedPartialDrugChanging(value);
					this.SendPropertyChanging();
					this._MappedPartialDrug = value;
					this.SendPropertyChanged("MappedPartialDrug");
					this.OnMappedPartialDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_PharmacyClass_CSS_PharmacyClassCombo", Storage="_CSS_PharmacyClass", ThisKey="PharmacyClassId", OtherKey="PharmacyClassId", IsForeignKey=true)]
		public CSS_PharmacyClass CSS_PharmacyClass
		{
			get
			{
				return this._CSS_PharmacyClass.Entity;
			}
			set
			{
				CSS_PharmacyClass previousValue = this._CSS_PharmacyClass.Entity;
				if (((previousValue != value) 
							|| (this._CSS_PharmacyClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CSS_PharmacyClass.Entity = null;
						previousValue.CSS_PharmacyClassCombos.Remove(this);
					}
					this._CSS_PharmacyClass.Entity = value;
					if ((value != null))
					{
						value.CSS_PharmacyClassCombos.Add(this);
						this._PharmacyClassId = value.PharmacyClassId;
					}
					else
					{
						this._PharmacyClassId = default(int);
					}
					this.SendPropertyChanged("CSS_PharmacyClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_PharmacyDrug_CSS_PharmacyClassCombo", Storage="_CSS_PharmacyDrug", ThisKey="PharmacyDrugId", OtherKey="PharmacyDrugId", IsForeignKey=true)]
		public CSS_PharmacyDrug CSS_PharmacyDrug
		{
			get
			{
				return this._CSS_PharmacyDrug.Entity;
			}
			set
			{
				CSS_PharmacyDrug previousValue = this._CSS_PharmacyDrug.Entity;
				if (((previousValue != value) 
							|| (this._CSS_PharmacyDrug.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CSS_PharmacyDrug.Entity = null;
						previousValue.CSS_PharmacyClassCombos.Remove(this);
					}
					this._CSS_PharmacyDrug.Entity = value;
					if ((value != null))
					{
						value.CSS_PharmacyClassCombos.Add(this);
						this._PharmacyDrugId = value.PharmacyDrugId;
					}
					else
					{
						this._PharmacyDrugId = default(int);
					}
					this.SendPropertyChanged("CSS_PharmacyDrug");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CSS_PharmacyClass")]
	public partial class CSS_PharmacyClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PharmacyClassId;
		
		private string _PharmacyClassDescription;
		
		private System.Nullable<short> _HierarchyLevel;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<long> _PharmacyClassProperties;
		
		private System.Nullable<System.DateTime> _InsertedUDT;
		
		private System.Nullable<System.DateTime> _ModifiedUDT;
		
		private string _PharmacyClassType;
		
		private string _PharmacyClassName;
		
		private string _PharmacyParentClassName;
		
		private System.Nullable<bool> _IsComboClass;
		
		private EntitySet<CSS_PharmacyClassCombo> _CSS_PharmacyClassCombos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPharmacyClassIdChanging(int value);
    partial void OnPharmacyClassIdChanged();
    partial void OnPharmacyClassDescriptionChanging(string value);
    partial void OnPharmacyClassDescriptionChanged();
    partial void OnHierarchyLevelChanging(System.Nullable<short> value);
    partial void OnHierarchyLevelChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnPharmacyClassPropertiesChanging(System.Nullable<long> value);
    partial void OnPharmacyClassPropertiesChanged();
    partial void OnInsertedUDTChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedUDTChanged();
    partial void OnModifiedUDTChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedUDTChanged();
    partial void OnPharmacyClassTypeChanging(string value);
    partial void OnPharmacyClassTypeChanged();
    partial void OnPharmacyClassNameChanging(string value);
    partial void OnPharmacyClassNameChanged();
    partial void OnPharmacyParentClassNameChanging(string value);
    partial void OnPharmacyParentClassNameChanged();
    partial void OnIsComboClassChanging(System.Nullable<bool> value);
    partial void OnIsComboClassChanged();
    #endregion
		
		public CSS_PharmacyClass()
		{
			this._CSS_PharmacyClassCombos = new EntitySet<CSS_PharmacyClassCombo>(new Action<CSS_PharmacyClassCombo>(this.attach_CSS_PharmacyClassCombos), new Action<CSS_PharmacyClassCombo>(this.detach_CSS_PharmacyClassCombos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PharmacyClassId
		{
			get
			{
				return this._PharmacyClassId;
			}
			set
			{
				if ((this._PharmacyClassId != value))
				{
					this.OnPharmacyClassIdChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassId = value;
					this.SendPropertyChanged("PharmacyClassId");
					this.OnPharmacyClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassDescription", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string PharmacyClassDescription
		{
			get
			{
				return this._PharmacyClassDescription;
			}
			set
			{
				if ((this._PharmacyClassDescription != value))
				{
					this.OnPharmacyClassDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassDescription = value;
					this.SendPropertyChanged("PharmacyClassDescription");
					this.OnPharmacyClassDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HierarchyLevel", DbType="SmallInt")]
		public System.Nullable<short> HierarchyLevel
		{
			get
			{
				return this._HierarchyLevel;
			}
			set
			{
				if ((this._HierarchyLevel != value))
				{
					this.OnHierarchyLevelChanging(value);
					this.SendPropertyChanging();
					this._HierarchyLevel = value;
					this.SendPropertyChanged("HierarchyLevel");
					this.OnHierarchyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassProperties", DbType="BigInt")]
		public System.Nullable<long> PharmacyClassProperties
		{
			get
			{
				return this._PharmacyClassProperties;
			}
			set
			{
				if ((this._PharmacyClassProperties != value))
				{
					this.OnPharmacyClassPropertiesChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassProperties = value;
					this.SendPropertyChanged("PharmacyClassProperties");
					this.OnPharmacyClassPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedUDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertedUDT
		{
			get
			{
				return this._InsertedUDT;
			}
			set
			{
				if ((this._InsertedUDT != value))
				{
					this.OnInsertedUDTChanging(value);
					this.SendPropertyChanging();
					this._InsertedUDT = value;
					this.SendPropertyChanged("InsertedUDT");
					this.OnInsertedUDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedUDT
		{
			get
			{
				return this._ModifiedUDT;
			}
			set
			{
				if ((this._ModifiedUDT != value))
				{
					this.OnModifiedUDTChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUDT = value;
					this.SendPropertyChanged("ModifiedUDT");
					this.OnModifiedUDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PharmacyClassType
		{
			get
			{
				return this._PharmacyClassType;
			}
			set
			{
				if ((this._PharmacyClassType != value))
				{
					this.OnPharmacyClassTypeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassType = value;
					this.SendPropertyChanged("PharmacyClassType");
					this.OnPharmacyClassTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyClassName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string PharmacyClassName
		{
			get
			{
				return this._PharmacyClassName;
			}
			set
			{
				if ((this._PharmacyClassName != value))
				{
					this.OnPharmacyClassNameChanging(value);
					this.SendPropertyChanging();
					this._PharmacyClassName = value;
					this.SendPropertyChanged("PharmacyClassName");
					this.OnPharmacyClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyParentClassName", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string PharmacyParentClassName
		{
			get
			{
				return this._PharmacyParentClassName;
			}
			set
			{
				if ((this._PharmacyParentClassName != value))
				{
					this.OnPharmacyParentClassNameChanging(value);
					this.SendPropertyChanging();
					this._PharmacyParentClassName = value;
					this.SendPropertyChanged("PharmacyParentClassName");
					this.OnPharmacyParentClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComboClass", DbType="Bit")]
		public System.Nullable<bool> IsComboClass
		{
			get
			{
				return this._IsComboClass;
			}
			set
			{
				if ((this._IsComboClass != value))
				{
					this.OnIsComboClassChanging(value);
					this.SendPropertyChanging();
					this._IsComboClass = value;
					this.SendPropertyChanged("IsComboClass");
					this.OnIsComboClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_PharmacyClass_CSS_PharmacyClassCombo", Storage="_CSS_PharmacyClassCombos", ThisKey="PharmacyClassId", OtherKey="PharmacyClassId")]
		public EntitySet<CSS_PharmacyClassCombo> CSS_PharmacyClassCombos
		{
			get
			{
				return this._CSS_PharmacyClassCombos;
			}
			set
			{
				this._CSS_PharmacyClassCombos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CSS_PharmacyClassCombos(CSS_PharmacyClassCombo entity)
		{
			this.SendPropertyChanging();
			entity.CSS_PharmacyClass = this;
		}
		
		private void detach_CSS_PharmacyClassCombos(CSS_PharmacyClassCombo entity)
		{
			this.SendPropertyChanging();
			entity.CSS_PharmacyClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CSS_TreatmentProfile")]
	public partial class CSS_TreatmentProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreatmentProfileId;
		
		private string _TreatmentProfileName;
		
		private System.Nullable<short> _AvgDurationHours;
		
		private long _TreatmentProfileProperties;
		
		private System.DateTime _InsertedUDT;
		
		private System.DateTime _ModifiedUDT;
		
		private bool _isDeleted;
		
		private string _DeletedBy;
		
		private string _ModifiedBy;
		
		private EntitySet<CSS_PharmacyDrug> _CSS_PharmacyDrugs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatmentProfileIdChanging(int value);
    partial void OnTreatmentProfileIdChanged();
    partial void OnTreatmentProfileNameChanging(string value);
    partial void OnTreatmentProfileNameChanged();
    partial void OnAvgDurationHoursChanging(System.Nullable<short> value);
    partial void OnAvgDurationHoursChanged();
    partial void OnTreatmentProfilePropertiesChanging(long value);
    partial void OnTreatmentProfilePropertiesChanged();
    partial void OnInsertedUDTChanging(System.DateTime value);
    partial void OnInsertedUDTChanged();
    partial void OnModifiedUDTChanging(System.DateTime value);
    partial void OnModifiedUDTChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public CSS_TreatmentProfile()
		{
			this._CSS_PharmacyDrugs = new EntitySet<CSS_PharmacyDrug>(new Action<CSS_PharmacyDrug>(this.attach_CSS_PharmacyDrugs), new Action<CSS_PharmacyDrug>(this.detach_CSS_PharmacyDrugs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TreatmentProfileId
		{
			get
			{
				return this._TreatmentProfileId;
			}
			set
			{
				if ((this._TreatmentProfileId != value))
				{
					this.OnTreatmentProfileIdChanging(value);
					this.SendPropertyChanging();
					this._TreatmentProfileId = value;
					this.SendPropertyChanged("TreatmentProfileId");
					this.OnTreatmentProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TreatmentProfileName
		{
			get
			{
				return this._TreatmentProfileName;
			}
			set
			{
				if ((this._TreatmentProfileName != value))
				{
					this.OnTreatmentProfileNameChanging(value);
					this.SendPropertyChanging();
					this._TreatmentProfileName = value;
					this.SendPropertyChanged("TreatmentProfileName");
					this.OnTreatmentProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgDurationHours", DbType="SmallInt")]
		public System.Nullable<short> AvgDurationHours
		{
			get
			{
				return this._AvgDurationHours;
			}
			set
			{
				if ((this._AvgDurationHours != value))
				{
					this.OnAvgDurationHoursChanging(value);
					this.SendPropertyChanging();
					this._AvgDurationHours = value;
					this.SendPropertyChanged("AvgDurationHours");
					this.OnAvgDurationHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileProperties", DbType="BigInt NOT NULL")]
		public long TreatmentProfileProperties
		{
			get
			{
				return this._TreatmentProfileProperties;
			}
			set
			{
				if ((this._TreatmentProfileProperties != value))
				{
					this.OnTreatmentProfilePropertiesChanging(value);
					this.SendPropertyChanging();
					this._TreatmentProfileProperties = value;
					this.SendPropertyChanged("TreatmentProfileProperties");
					this.OnTreatmentProfilePropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedUDT", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedUDT
		{
			get
			{
				return this._InsertedUDT;
			}
			set
			{
				if ((this._InsertedUDT != value))
				{
					this.OnInsertedUDTChanging(value);
					this.SendPropertyChanging();
					this._InsertedUDT = value;
					this.SendPropertyChanged("InsertedUDT");
					this.OnInsertedUDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUDT", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUDT
		{
			get
			{
				return this._ModifiedUDT;
			}
			set
			{
				if ((this._ModifiedUDT != value))
				{
					this.OnModifiedUDTChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUDT = value;
					this.SendPropertyChanged("ModifiedUDT");
					this.OnModifiedUDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_TreatmentProfile_CSS_PharmacyDrug", Storage="_CSS_PharmacyDrugs", ThisKey="TreatmentProfileId", OtherKey="TreatmentProfileId")]
		public EntitySet<CSS_PharmacyDrug> CSS_PharmacyDrugs
		{
			get
			{
				return this._CSS_PharmacyDrugs;
			}
			set
			{
				this._CSS_PharmacyDrugs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CSS_PharmacyDrugs(CSS_PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.CSS_TreatmentProfile = this;
		}
		
		private void detach_CSS_PharmacyDrugs(CSS_PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.CSS_TreatmentProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CSS_PharmacyDrug")]
	public partial class CSS_PharmacyDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PharmacyDrugId;
		
		private string _MappedPharmacyDrug;
		
		private string _MappedPharmacyUnit;
		
		private string _MappedPharmacyRoute;
		
		private System.Nullable<int> _TreatmentProfileId;
		
		private long _PharmacyDrugProperties;
		
		private EntitySet<CSS_PharmacyClassCombo> _CSS_PharmacyClassCombos;
		
		private EntityRef<CSS_TreatmentProfile> _CSS_TreatmentProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPharmacyDrugIdChanging(int value);
    partial void OnPharmacyDrugIdChanged();
    partial void OnMappedPharmacyDrugChanging(string value);
    partial void OnMappedPharmacyDrugChanged();
    partial void OnMappedPharmacyUnitChanging(string value);
    partial void OnMappedPharmacyUnitChanged();
    partial void OnMappedPharmacyRouteChanging(string value);
    partial void OnMappedPharmacyRouteChanged();
    partial void OnTreatmentProfileIdChanging(System.Nullable<int> value);
    partial void OnTreatmentProfileIdChanged();
    partial void OnPharmacyDrugPropertiesChanging(long value);
    partial void OnPharmacyDrugPropertiesChanged();
    #endregion
		
		public CSS_PharmacyDrug()
		{
			this._CSS_PharmacyClassCombos = new EntitySet<CSS_PharmacyClassCombo>(new Action<CSS_PharmacyClassCombo>(this.attach_CSS_PharmacyClassCombos), new Action<CSS_PharmacyClassCombo>(this.detach_CSS_PharmacyClassCombos));
			this._CSS_TreatmentProfile = default(EntityRef<CSS_TreatmentProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyDrugId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PharmacyDrugId
		{
			get
			{
				return this._PharmacyDrugId;
			}
			set
			{
				if ((this._PharmacyDrugId != value))
				{
					this.OnPharmacyDrugIdChanging(value);
					this.SendPropertyChanging();
					this._PharmacyDrugId = value;
					this.SendPropertyChanged("PharmacyDrugId");
					this.OnPharmacyDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedPharmacyDrug", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MappedPharmacyDrug
		{
			get
			{
				return this._MappedPharmacyDrug;
			}
			set
			{
				if ((this._MappedPharmacyDrug != value))
				{
					this.OnMappedPharmacyDrugChanging(value);
					this.SendPropertyChanging();
					this._MappedPharmacyDrug = value;
					this.SendPropertyChanged("MappedPharmacyDrug");
					this.OnMappedPharmacyDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedPharmacyUnit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MappedPharmacyUnit
		{
			get
			{
				return this._MappedPharmacyUnit;
			}
			set
			{
				if ((this._MappedPharmacyUnit != value))
				{
					this.OnMappedPharmacyUnitChanging(value);
					this.SendPropertyChanging();
					this._MappedPharmacyUnit = value;
					this.SendPropertyChanged("MappedPharmacyUnit");
					this.OnMappedPharmacyUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedPharmacyRoute", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MappedPharmacyRoute
		{
			get
			{
				return this._MappedPharmacyRoute;
			}
			set
			{
				if ((this._MappedPharmacyRoute != value))
				{
					this.OnMappedPharmacyRouteChanging(value);
					this.SendPropertyChanging();
					this._MappedPharmacyRoute = value;
					this.SendPropertyChanged("MappedPharmacyRoute");
					this.OnMappedPharmacyRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileId", DbType="Int")]
		public System.Nullable<int> TreatmentProfileId
		{
			get
			{
				return this._TreatmentProfileId;
			}
			set
			{
				if ((this._TreatmentProfileId != value))
				{
					if (this._CSS_TreatmentProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTreatmentProfileIdChanging(value);
					this.SendPropertyChanging();
					this._TreatmentProfileId = value;
					this.SendPropertyChanged("TreatmentProfileId");
					this.OnTreatmentProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyDrugProperties", DbType="BigInt NOT NULL")]
		public long PharmacyDrugProperties
		{
			get
			{
				return this._PharmacyDrugProperties;
			}
			set
			{
				if ((this._PharmacyDrugProperties != value))
				{
					this.OnPharmacyDrugPropertiesChanging(value);
					this.SendPropertyChanging();
					this._PharmacyDrugProperties = value;
					this.SendPropertyChanged("PharmacyDrugProperties");
					this.OnPharmacyDrugPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_PharmacyDrug_CSS_PharmacyClassCombo", Storage="_CSS_PharmacyClassCombos", ThisKey="PharmacyDrugId", OtherKey="PharmacyDrugId")]
		public EntitySet<CSS_PharmacyClassCombo> CSS_PharmacyClassCombos
		{
			get
			{
				return this._CSS_PharmacyClassCombos;
			}
			set
			{
				this._CSS_PharmacyClassCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CSS_TreatmentProfile_CSS_PharmacyDrug", Storage="_CSS_TreatmentProfile", ThisKey="TreatmentProfileId", OtherKey="TreatmentProfileId", IsForeignKey=true)]
		public CSS_TreatmentProfile CSS_TreatmentProfile
		{
			get
			{
				return this._CSS_TreatmentProfile.Entity;
			}
			set
			{
				CSS_TreatmentProfile previousValue = this._CSS_TreatmentProfile.Entity;
				if (((previousValue != value) 
							|| (this._CSS_TreatmentProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CSS_TreatmentProfile.Entity = null;
						previousValue.CSS_PharmacyDrugs.Remove(this);
					}
					this._CSS_TreatmentProfile.Entity = value;
					if ((value != null))
					{
						value.CSS_PharmacyDrugs.Add(this);
						this._TreatmentProfileId = value.TreatmentProfileId;
					}
					else
					{
						this._TreatmentProfileId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CSS_TreatmentProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CSS_PharmacyClassCombos(CSS_PharmacyClassCombo entity)
		{
			this.SendPropertyChanging();
			entity.CSS_PharmacyDrug = this;
		}
		
		private void detach_CSS_PharmacyClassCombos(CSS_PharmacyClassCombo entity)
		{
			this.SendPropertyChanging();
			entity.CSS_PharmacyDrug = null;
		}
	}
	
	public partial class CSS_GetTreatmentProfilesResult
	{
		
		private int _TreatmentProfileId;
		
		private string _TreatmentProfileName;
		
		private System.Nullable<short> _AvgDurationHours;
		
		private long _TreatmentProfileProperties;
		
		private System.DateTime _InsertedUDT;
		
		private System.DateTime _ModifiedUDT;
		
		public CSS_GetTreatmentProfilesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileId", DbType="Int NOT NULL")]
		public int TreatmentProfileId
		{
			get
			{
				return this._TreatmentProfileId;
			}
			set
			{
				if ((this._TreatmentProfileId != value))
				{
					this._TreatmentProfileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TreatmentProfileName
		{
			get
			{
				return this._TreatmentProfileName;
			}
			set
			{
				if ((this._TreatmentProfileName != value))
				{
					this._TreatmentProfileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgDurationHours", DbType="SmallInt")]
		public System.Nullable<short> AvgDurationHours
		{
			get
			{
				return this._AvgDurationHours;
			}
			set
			{
				if ((this._AvgDurationHours != value))
				{
					this._AvgDurationHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentProfileProperties", DbType="BigInt NOT NULL")]
		public long TreatmentProfileProperties
		{
			get
			{
				return this._TreatmentProfileProperties;
			}
			set
			{
				if ((this._TreatmentProfileProperties != value))
				{
					this._TreatmentProfileProperties = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedUDT", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedUDT
		{
			get
			{
				return this._InsertedUDT;
			}
			set
			{
				if ((this._InsertedUDT != value))
				{
					this._InsertedUDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUDT", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUDT
		{
			get
			{
				return this._ModifiedUDT;
			}
			set
			{
				if ((this._ModifiedUDT != value))
				{
					this._ModifiedUDT = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
